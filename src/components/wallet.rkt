#lang racket

; A Wallet is a structure that contains a public and a private key.
(require crypto)
(require  crypto/all)

(struct wallet
  (private-key public-key) #:prefab)

;Note: Public-key (PK) cryptography uses keypairs consisting of public and private keys.
;A keypair can be generated by calling generate-private-key with the desired PK cryptosystem
;and an association list of key-generation options. The private key consists of the whole keypair?both private and public components.
;A key containing only the public components can be obtained with the pk-key->public-only-key function.

(define sha1-impl (get-digest 'sha1 libcrypto-factory))
(define rsa-impl (get-pk 'rsa libcrypto-factory))

(define privkey (generate-private-key rsa-impl '((nbits 512))))
(define pubkey (pk-key->public-only-key privkey))

(define (create-wallet)
    (wallet (bytes->hex-string (pk-key->datum privkey 'PrivateKeyInfo))
            (bytes->hex-string (pk-key->datum privkey 'SubjectPublicKeyInfo))))

(provide (struct-out wallet) create-wallet)
